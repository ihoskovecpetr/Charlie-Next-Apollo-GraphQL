{"ast":null,"code":"const {\n  PubSub\n} = require(\"apollo-server\");\n\nconst NEW_USER = \"NEW_USER\";\nexport const pubsub = new PubSub();\nexport const resolvers = {\n  Subscription: {\n    newUser: {\n      subscribe: (_, __, {\n        pubsub\n      }) => pubsub.asyncIterator(NEW_USER)\n    }\n  },\n  Query: {\n    viewer(_parent, _args, _context, _info) {\n      return {\n        id: 1,\n        name: \"John Smith XoX\",\n        status: \"cached\"\n      };\n    }\n\n  },\n  Mutation: {\n    newUser(_parent, _args, {\n      pubsub\n    }, _info) {\n      console.log(\"_args: \", _args);\n      pubsub.publish(NEW_USER, {\n        id: 101,\n        name: \"John Subscriber\",\n        status: \"cacheding\"\n      });\n      return {\n        id: 123,\n        name: _args.newUser.name,\n        status: _args.newUser.status\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/Users/macuser/Desktop/Demo/api-routes-apollo-server-and-client/apollo/resolvers.js"],"names":["PubSub","require","NEW_USER","pubsub","resolvers","Subscription","newUser","subscribe","_","__","asyncIterator","Query","viewer","_parent","_args","_context","_info","id","name","status","Mutation","console","log","publish"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,eAAD,CAA1B;;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,OAAO,MAAMC,MAAM,GAAG,IAAIH,MAAJ,EAAf;AAEP,OAAO,MAAMI,SAAS,GAAG;AACvBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE,CAACC,CAAD,EAAIC,EAAJ,EAAQ;AAAEN,QAAAA;AAAF,OAAR,KAAuBA,MAAM,CAACO,aAAP,CAAqBR,QAArB;AAD3B;AADG,GADS;AAMvBS,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,CAACC,OAAD,EAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkC;AACtC,aAAO;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,gBAAf;AAAiCC,QAAAA,MAAM,EAAE;AAAzC,OAAP;AACD;;AAHI,GANgB;AAWvBC,EAAAA,QAAQ,EAAE;AACRd,IAAAA,OAAO,CAACO,OAAD,EAAUC,KAAV,EAAiB;AAAEX,MAAAA;AAAF,KAAjB,EAA6Ba,KAA7B,EAAoC;AACzCK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,KAAvB;AAEAX,MAAAA,MAAM,CAACoB,OAAP,CAAerB,QAAf,EAAyB;AACvBe,QAAAA,EAAE,EAAE,GADmB;AAEvBC,QAAAA,IAAI,EAAE,iBAFiB;AAGvBC,QAAAA,MAAM,EAAE;AAHe,OAAzB;AAMA,aAAO;AACLF,QAAAA,EAAE,EAAE,GADC;AAELC,QAAAA,IAAI,EAAEJ,KAAK,CAACR,OAAN,CAAcY,IAFf;AAGLC,QAAAA,MAAM,EAAEL,KAAK,CAACR,OAAN,CAAca;AAHjB,OAAP;AAKD;;AAfO;AAXa,CAAlB","sourcesContent":["const { PubSub } = require(\"apollo-server\");\n\nconst NEW_USER = \"NEW_USER\";\nexport const pubsub = new PubSub();\n\nexport const resolvers = {\n  Subscription: {\n    newUser: {\n      subscribe: (_, __, { pubsub }) => pubsub.asyncIterator(NEW_USER)\n    }\n  },\n  Query: {\n    viewer(_parent, _args, _context, _info) {\n      return { id: 1, name: \"John Smith XoX\", status: \"cached\" };\n    }\n  },\n  Mutation: {\n    newUser(_parent, _args, { pubsub }, _info) {\n      console.log(\"_args: \", _args);\n\n      pubsub.publish(NEW_USER, {\n        id: 101,\n        name: \"John Subscriber\",\n        status: \"cacheding\"\n      });\n\n      return {\n        id: 123,\n        name: _args.newUser.name,\n        status: _args.newUser.status\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}