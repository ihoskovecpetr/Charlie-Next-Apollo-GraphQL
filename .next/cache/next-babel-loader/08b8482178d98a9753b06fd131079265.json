{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Demo/api-routes-apollo-server-and-client/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from '../apollo/client';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nconst ViewerQuery = gql`\n  query ViewerQuery {\n    viewer {\n      id\n      name\n      status\n    }\n  }\n`;\n\nconst Index = () => {\n  const {\n    data: {\n      viewer\n    }\n  } = useQuery(ViewerQuery);\n\n  if (viewer) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"You're signed in as \", viewer.name, \" and you're \", viewer.status, \" goto\", ' ', __jsx(Link, {\n      href: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"static\")), ' ', \"page.\");\n  }\n\n  return null;\n};\n\nexport default withApollo(Index);","map":{"version":3,"sources":["/Users/macuser/Desktop/Demo/api-routes-apollo-server-and-client/pages/index.js"],"names":["withApollo","gql","Link","useQuery","ViewerQuery","Index","data","viewer","name","status"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,WAAW,GAAGH,GAAI;;;;;;;;CAAxB;;AAUA,MAAMI,KAAK,GAAG,MAAM;AAClB,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFJ,QAAQ,CAACC,WAAD,CAFZ;;AAIA,MAAIG,MAAJ,EAAY;AACV,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuBA,MAAM,CAACC,IAD9B,kBACgDD,MAAM,CAACE,MADvD,WACoE,GADpE,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,EAIU,GAJV,UADF;AASD;;AAED,SAAO,IAAP;AACD,CAlBD;;AAoBA,eAAeT,UAAU,CAACK,KAAD,CAAzB","sourcesContent":["import { withApollo } from '../apollo/client'\nimport gql from 'graphql-tag'\nimport Link from 'next/link'\nimport { useQuery } from '@apollo/react-hooks'\n\nconst ViewerQuery = gql`\n  query ViewerQuery {\n    viewer {\n      id\n      name\n      status\n    }\n  }\n`\n\nconst Index = () => {\n  const {\n    data: { viewer }\n  } = useQuery(ViewerQuery)\n\n  if (viewer) {\n    return (\n      <div>\n        You're signed in as {viewer.name} and you're {viewer.status} goto{' '}\n        <Link href='/about'>\n          <a>static</a>\n        </Link>{' '}\n        page.\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport default withApollo(Index)\n"]},"metadata":{},"sourceType":"module"}